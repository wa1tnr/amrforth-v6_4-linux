0 [if]   pcf8583.fs   Driver for the Real Time Clock chip.
Copyright (C) 2001 by AM Research, Inc.

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For LGPL information:   http://www.gnu.org/copyleft/lesser.txt
For application information:   http://www.amresearch.com

[then]

IN-META DECIMAL

\ Requires IIC552.SEQ

\ This applies to the Philips Real Time Clock, PCF8583
\    used on the 552 Developer's System.
\ Please be aware that in RTC@ a stop condition is generated by IIC!
\ before the start condition in IIC@.  The spec actually calls for a
\ repeated start without an intervening stop.  If you have multiple
\ masters on the bus this could be a problem.  We only use this driver
\ in a single master system.  It is very portable since we have definitions
\ for IIC@, IIC!, and IIC$! for the plain 8051 and for the 751,752.

$A0 CONSTANT RTC

: RTC@   ( a - b)    RTC IIC! RTC IIC@ ;
: RTC!   ( b a - )   2 RTC iic$! ;

\ Non-Volatile store.
: NV!   ( n a - )   OVER FLIP OVER RTC!   1 + RTC! ;
: NV2!  ( d a - )   SWAP OVER NV!   2 + NV! ;

\ Non-Volatile fetch.
: NV@   ( a - n)   DUP RTC@ FLIP   SWAP 1 + RTC@ + ;
: NV2@  ( a - d)   DUP 2 + NV@   SWAP NV@ ;
: NV+!  ( n a - )   DUP >R NV@ + R> NV! ;

: INIT-RTC      (  - )   0 0 RTC! ;

: SECONDS@      (  - n)   2 RTC@ ;
: SECONDS!      ( n - )   2 RTC! ;

: MINUTES@      (  - n)   3 RTC@ ;
: MINUTES!      ( n - )   3 RTC! ;

: HOURS@        (  - n)   4 RTC@ ;
: HOURS!        ( n - )   4 RTC! ;

: DAY@          (  - n)   5 RTC@ $3F AND ;
: DAY!          ( n - )   5 RTC@ $C0 AND OR 5 RTC! ;

: MONTH@        (  - n)   6 RTC@ $1F AND ;
: MONTH!        ( n - )   6 RTC@ $E0 AND OR 6 RTC! ;

: DATE!   ( min hrs day mon - )
        INIT-RTC MONTH! DAY! HOURS! MINUTES! ;
: DATE@   (  - mon day hrs min sec)
        INIT-RTC MONTH@ DAY@ HOURS@ MINUTES@ SECONDS@ ;

\ The following words convert bytes to and from Binary Coded Decimal.
: >BCD   ( n1 - n2)   0 10 UM/MOD 2* 2* 2* 2* + ;
: BCD>   ( n1 - n2)   DUP $0F AND SWAP 2/ 2/ 2/ 2/ 10 * + ;

$10 CONSTANT YEAR
\ Base year is kept at address $10 of RTC ram.
\ Add the leap year offset to get the real year.

: LEAPYEAR      (  - 0|1|2|3)   5 RTC@ 2/ 2/ 2/ 2/ 2/ 2/ ;

: YEAR@     (  - n)
        YEAR RTC@ BCD>   LEAPYEAR + >BCD ;

: YEAR!     ( n - )
        BCD> DUP 2/ 2/ 2* 2*
        DUP >BCD YEAR RTC!   - 2* 2* 2* 2* 2* 2*
        5 RTC@ $3F AND OR 5 RTC! ;

: LEAPYEAR?     (  - flag)   LEAPYEAR 0= ;

0 [if]   \ ***** ----- Alarm functions -----

8 CONSTANT ALARM-CONTROL

: ENABLE-ALARM    (  - )   0 RTC@ 4 OR 0 RTC! ;
: DISABLE-ALARM   (  - )   0 RTC@ $FB AND 0 RTC! ;

\ ----- Expects BCD values -----
: RESET-DAILY-ALARM   (  - )
        INIT-RTC
        0  9 RTC!       \ Hundredths
        0 10 RTC!       \ Second
      $FF 13 RTC!       \ Day     (Marks a daily alarm)
      $FF 14 RTC!       \ Month   (Marks a daily alarm)
        $D0 ALARM-CONTROL RTC!
        ENABLE-ALARM ;

: DAILY-ALARM   ( hour minute - )
        11 RTC!         \ Minute
        12 RTC!         \ Hour
        RESET-DAILY-ALARM ;

: AUTOCAL-HOURS@   (  - n)   12 RTC@ ;
: AUTOCAL-HOURS!   ( n - )   12 RTC! ;

: AUTOCAL-MINUTES@   (  - n)   11 RTC@ ;
: AUTOCAL-MINUTES!   ( n - )   11 RTC! ;

[then]

